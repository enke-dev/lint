name: Release

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version-file: .nvmrc
          cache: npm

      - run: |
          npm ci
          npm run lint

  release:
    if: github.ref == 'refs/heads/main' && github.event_name != 'pull_request'
    needs: check
    runs-on: ubuntu-latest
    permissions:
      contents: write
      id-token: write
    outputs:
      version: ${{ steps.version.outputs.latest }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          fetch-tags: true
      - uses: actions/setup-node@v4
        with:
          node-version-file: .nvmrc
          cache: npm
          registry-url: https://registry.npmjs.org/

      - run: |
          npm ci
          npm run build

      - run: |
          git config user.email "${{ vars.NPM_EMAIL }}"
          git config user.name "${{ vars.NPM_USER }}"
          npm config set //registry.npmjs.org/:_authToken ${{secrets.NPM_TOKEN}}
          npm install --global release-it @release-it/conventional-changelog

      - run: |
          release-it \
            --ci \
            --npm.skipChecks \
            --npm.publish \
            --no-github.release \
            --git.commitMessage='chore: release v${version}' \
            --git.pushArgs=--follow-tags \
            --plugins.@release-it/conventional-changelog.infile=CHANGELOG.md \
            --plugins.@release-it/conventional-changelog.header='# @enke/lint' \
            --plugins.@release-it/conventional-changelog.preset=angular
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - run: |
          version=$(node -e "console.log(require('./package.json').version);")
          echo "Released ${version} :rocket:" >> $GITHUB_STEP_SUMMARY
